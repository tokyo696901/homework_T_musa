111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

class Product:
    def __init__(self, product_id, name, price, rating, available_quantity):
        self.product_id = product_id
        self.name = name
        self.price = price
        self.rating = rating
        self.available_quantity = available_quantity

    def add_stock(self, quantity):
        self.available_quantity += quantity

    def remove_stock(self, quantity):
        if quantity <= self.available_quantity:
            self.available_quantity -= quantity
        else:
            print("Not enough stock available.")

    def update_rating(self, new_rating):
        self.rating = new_rating

    def update_price(self, new_price):
        self.price = new_price

2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

class Category:
def __init__(self, name):
        self.name = name
        self.items = []

    def add_item(self, item):
        self.items.append(item)

    def remove_item(self, item):
        if item in self.items:
            self.items.remove(item)
        else:
            print(f"{item} not found in the category.")

    def get_items(self):
        return self.items

# Создание объектов класса Категория
category1 = Category("Electronics")
category2 = Category("Clothing")

# Добавление товаров
item1 = Product(product_id=1, name="Laptop", price=800, rating=4.8, available_quantity=10)
item2 = Product(product_id=2, name="Smartphone", price=500, rating=4.5, available_quantity=20)

category1.add_item(item1)
category1.add_item(item2)

item3 = Product(product_id=3, name="T-shirt", price=25, rating=4.0, available_quantity=50)
item4 = Product(product_id=4, name="Jeans", price=40, rating=4.2, available_quantity=30)

category2.add_item(item3)
category2.add_item(item4)

# Получение списка товаров в каждой категории
items_in_category1 = category1.get_items()
items_in_category2 = category2.get_items()

print(f"Items in Electronics category: {items_in_category1}")
print(f"Items in Clothing category: {items_in_category2}")

33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333

class Basket:
    def __init__(self):
        self.items = []

    def add_item(self, item):
        self.items.append(item)

    def remove_item(self, item):
        if item in self.items:
            self.items.remove(item)
        else:
            print(f"{item} not found in the basket.")

    def get_items(self):
        return self.items

    def make_purchase(self, purchased_item_ids):
        purchased_items = []

        for item in self.items:
            if item.product_id in purchased_item_ids:
                purchased_items.append(item)
        
        for purchased_item in purchased_items:
            self.items.remove(purchased_item)

        purchased_names = [item.name for item in purchased_items]
        print("Purchased items:", purchased_names)

# Пример использования класса Basket
basket = Basket()

# Добавление товаров
basket.add_item(item1)
basket.add_item(item2)
basket.add_item(item3)
basket.add_item(item4)

# Получение списка товаров в корзине
items_in_basket_before_purchase = basket.get_items()
print("Items in the basket before purchase:", [item.name for item in items_in_basket_before_purchase])

# Совершение покупки и вывод купленных товаров
basket.make_purchase([1, 3])

# Получение списка товаров в корзине после покупки
items_in_basket_after_purchase = basket.get_items()
print("Items in the basket after purchase:", [item.name for item in items_in_basket_after_purchase])


4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444

class User:
    def __init__(self, username, password):
        self.username = username
        self.password = password
        self.basket = Basket()

    def __str__(self):
        return f"User: {self.username}"

# Пример создания нескольких объектов класса User
user1 = User("user1", "password1")
user2 = User("user2", "password2")
user3 = User("user3", "password3")

# Вывод информации о пользователях
print(user1)
print(user2)
print(user3)

